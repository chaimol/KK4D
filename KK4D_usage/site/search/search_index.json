{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"KK4D: a pipline for one or two genome analysis of Ka,Ks,4DTv,coline. For visit KK4D origin script in githubs . For visit KK4D usage this website github Install KK4D Usage for one genome analysis for two genome analysis This is the architecture of the original document mkdocs.yml # The configuration file. docs/ #The main folder for put makedownfile - Home: index.md - 'User Guide': guide.md - 'Require software': require.md - Install: install.md - Usage: usage.md - Example\uff1aexample.md - About: about.md - img: put the image file This is the compiled architecture build this orgin makedownfile to html file mkdocs build --clean","title":"Home"},{"location":"#kk4d-a-pipline-for-one-or-two-genome-analysis-of-kaks4dtvcoline","text":"For visit KK4D origin script in githubs . For visit KK4D usage this website github","title":"KK4D: a pipline for one or two genome analysis of Ka,Ks,4DTv,coline."},{"location":"#install-kk4d","text":"","title":"Install KK4D"},{"location":"#usage","text":"for one genome analysis for two genome analysis","title":"Usage"},{"location":"#this-is-the-architecture-of-the-original-document","text":"mkdocs.yml # The configuration file. docs/ #The main folder for put makedownfile - Home: index.md - 'User Guide': guide.md - 'Require software': require.md - Install: install.md - Usage: usage.md - Example\uff1aexample.md - About: about.md - img: put the image file","title":"This is the architecture of the original document"},{"location":"#this-is-the-compiled-architecture","text":"build this orgin makedownfile to html file mkdocs build --clean","title":"This is the compiled architecture"},{"location":"about/","text":"KK4D info Version: 1.00 Author: Mao Chai Email: chaimol@163.com Build Date: 2024.01.18","title":"About"},{"location":"about/#kk4d-info","text":"Version: 1.00 Author: Mao Chai Email: chaimol@163.com Build Date: 2024.01.18","title":"KK4D info"},{"location":"example/","text":"demo for use KK4D download demo data from https://doi.org/10.6084/m9.figshare.25060220.v1. Input file list Ath.genome.fa.gz Ath.gff3.gz IRGSP.cds.fa.gz IRGSP.pep.fa.gz IRGSPRAP.gff3.gz From genome file get the protein and CDS sequence files for Arabidopsis gzip -d Ath.genome.fa.gz gzip -d Ath.gff3.gz bash genome2cdspep.sh Ath.genome.fa Ath.gff3 Ath . This will output the file Ath.pep and Ath.cds . Please remember that each new analysis of a different genome must be in a new folder, otherwise it may cause errors. example1:Comparative analysis of one genomes. (Arabidopsis thaliana) mkdir Ath_result cd Ath_result mv ../Ath.pep . mv ../Ath.cds . mv ../Ath.gff3 . KK4D.sh all -group 1 -cpu 24 -key ID -type mRNA -sample A.thaliana -abbr Ath -gff3 Ath.gff3 -protein Ath.pep -cds Ath.cds -chrnum 5 24 CPU threads were used above output file list Ath.Ath.dotplot.pdf A.thaliana.A.thaliana.sankey.pdf ks_4DTv.bold.jpg Ath_Ath.block.coline.pdf Ath_Ath.homolog All.Ks_peak.csv All.X4dtv_corrected_peak.csv Ath_Ath.kaks4DTv.csv All.Ks_peak.csv x y peak_time type peak_type 0.047947329 0.005494129 2.715024274 A.thaliana Ks 0.906953311 1.082462082 51.35635961 A.thaliana Ks 2.407495406 0.11673559 136.3247682 A.thaliana Ks Combined with the Ks distribution chart drawn above, it can be seen that the line in black font in the table is the correct peak value. The x value in this row means that the peak Ks is 0.906953311, and the following peak_time 51.35635961 indicates that the doubling of the Arabidopsis genome occurred at 51.35635961MYA (millions of years ago). Ks peak and 4DTv peak file, please note that there may be redundant peaks in it, and users need to judge by themselves which are the final valid peaks. The default evolutionary rate \u03bb is 7E-9. If you need to change the value of \u03bb, you can calculate the time of your species according to the formula T=(Ks_peak/2\u03bb). For example, if you need to change \u03bb to 2.5e-9, then You can use T=0.906953311/(2*(2.5e-9))/(1E6) to get T=181.39066219 MYA. example2:Comparative analysis of two genomes. (Arabidopsis thaliana and rice IRGSP1.0) mkdir Ath_rice cd Ath_rice mv ../Ath.pep . mv ../Ath.cds . mv ../Ath.gff3 . mv ../IRGSP.cds.fa.gz . mv ../IRGSP.pep.fa.gz . mv ../IRGSPRAP.gff3.gz . KK4D.sh all -wd /pathto/Ath_rice -group 2 -cpu 32 -key ID ID -type mRNA mRNA -sample A.thaliana Oryza.Sativa -abbr Ath Osa -gff3 Ath.gff3 IRGSPRAP.gff3.gz -protein Ath.pep IRGSP.pep.fa.gz -cds Ath.cds IRGSP.cds.fa.gz -chrnum 5 12 output file list A.trichopoda.Oryza.Sativa.sankey.pdf Ath.Osa.pdf Ath_Osa.bar.plot.pdf Ath_Osa.block.coline.pdf ks_4DTv.bold.pdf Ks_new.peak.png X4dtv_corrected_new.peak.png Ath_Osa.kaks4DTv.csv Seq 4dtv_corrected Ka Ks Ka/Ks AT1G01340-Os06t0527100-01 0.517241379 0.325955 3.27552 0.0995124 AT1G01360-Os06t0526400-00 0.422222222 0.350108 3.14752 0.111233 AT1G01430-Os06t0524400-01 0.482352941 0.47486 2.78177 0.170704 AT1G01440-Os06t0524300-01 0.444444444 0.713729 2.12416 0.336005 AT1G01490-Os03t0126700-01 0.45 0.314753 3.76469 0.0836064 AT1G01490-Os10t0532300-01 0.303030303 0.359687 3.56672 0.100845 ... ... ... ... ... All.Ks_peak.csv x y peak_time type peak_type 3.087357756 0.605837178 257.279813 A.trichopoda Ks All.X4dtv_corrected_peak.csv x y peak_time type peak_type 0.44939236 6.75502253 37.44936336 A.trichopoda X4dtv_corrected","title":"Example"},{"location":"example/#demo-for-use-kk4d","text":"download demo data from https://doi.org/10.6084/m9.figshare.25060220.v1.","title":"demo for use KK4D"},{"location":"example/#input-file-list","text":"Ath.genome.fa.gz Ath.gff3.gz IRGSP.cds.fa.gz IRGSP.pep.fa.gz IRGSPRAP.gff3.gz","title":"Input file list"},{"location":"example/#from-genome-file-get-the-protein-and-cds-sequence-files-for-arabidopsis","text":"gzip -d Ath.genome.fa.gz gzip -d Ath.gff3.gz bash genome2cdspep.sh Ath.genome.fa Ath.gff3 Ath . This will output the file Ath.pep and Ath.cds . Please remember that each new analysis of a different genome must be in a new folder, otherwise it may cause errors.","title":"From genome file get the protein and CDS sequence files for Arabidopsis"},{"location":"example/#example1comparative-analysis-of-one-genomes-arabidopsis-thaliana","text":"mkdir Ath_result cd Ath_result mv ../Ath.pep . mv ../Ath.cds . mv ../Ath.gff3 . KK4D.sh all -group 1 -cpu 24 -key ID -type mRNA -sample A.thaliana -abbr Ath -gff3 Ath.gff3 -protein Ath.pep -cds Ath.cds -chrnum 5 24 CPU threads were used above","title":"example1:Comparative analysis of one genomes. (Arabidopsis thaliana)"},{"location":"example/#output-file-list","text":"Ath.Ath.dotplot.pdf A.thaliana.A.thaliana.sankey.pdf ks_4DTv.bold.jpg Ath_Ath.block.coline.pdf Ath_Ath.homolog All.Ks_peak.csv All.X4dtv_corrected_peak.csv Ath_Ath.kaks4DTv.csv All.Ks_peak.csv x y peak_time type peak_type 0.047947329 0.005494129 2.715024274 A.thaliana Ks 0.906953311 1.082462082 51.35635961 A.thaliana Ks 2.407495406 0.11673559 136.3247682 A.thaliana Ks Combined with the Ks distribution chart drawn above, it can be seen that the line in black font in the table is the correct peak value. The x value in this row means that the peak Ks is 0.906953311, and the following peak_time 51.35635961 indicates that the doubling of the Arabidopsis genome occurred at 51.35635961MYA (millions of years ago). Ks peak and 4DTv peak file, please note that there may be redundant peaks in it, and users need to judge by themselves which are the final valid peaks. The default evolutionary rate \u03bb is 7E-9. If you need to change the value of \u03bb, you can calculate the time of your species according to the formula T=(Ks_peak/2\u03bb). For example, if you need to change \u03bb to 2.5e-9, then You can use T=0.906953311/(2*(2.5e-9))/(1E6) to get T=181.39066219 MYA.","title":"output file list"},{"location":"example/#example2comparative-analysis-of-two-genomes-arabidopsis-thaliana-and-rice-irgsp10","text":"mkdir Ath_rice cd Ath_rice mv ../Ath.pep . mv ../Ath.cds . mv ../Ath.gff3 . mv ../IRGSP.cds.fa.gz . mv ../IRGSP.pep.fa.gz . mv ../IRGSPRAP.gff3.gz . KK4D.sh all -wd /pathto/Ath_rice -group 2 -cpu 32 -key ID ID -type mRNA mRNA -sample A.thaliana Oryza.Sativa -abbr Ath Osa -gff3 Ath.gff3 IRGSPRAP.gff3.gz -protein Ath.pep IRGSP.pep.fa.gz -cds Ath.cds IRGSP.cds.fa.gz -chrnum 5 12","title":"example2:Comparative analysis of two genomes. (Arabidopsis thaliana and rice IRGSP1.0)"},{"location":"example/#output-file-list_1","text":"A.trichopoda.Oryza.Sativa.sankey.pdf Ath.Osa.pdf Ath_Osa.bar.plot.pdf Ath_Osa.block.coline.pdf ks_4DTv.bold.pdf Ks_new.peak.png X4dtv_corrected_new.peak.png Ath_Osa.kaks4DTv.csv Seq 4dtv_corrected Ka Ks Ka/Ks AT1G01340-Os06t0527100-01 0.517241379 0.325955 3.27552 0.0995124 AT1G01360-Os06t0526400-00 0.422222222 0.350108 3.14752 0.111233 AT1G01430-Os06t0524400-01 0.482352941 0.47486 2.78177 0.170704 AT1G01440-Os06t0524300-01 0.444444444 0.713729 2.12416 0.336005 AT1G01490-Os03t0126700-01 0.45 0.314753 3.76469 0.0836064 AT1G01490-Os10t0532300-01 0.303030303 0.359687 3.56672 0.100845 ... ... ... ... ... All.Ks_peak.csv x y peak_time type peak_type 3.087357756 0.605837178 257.279813 A.trichopoda Ks All.X4dtv_corrected_peak.csv x y peak_time type peak_type 0.44939236 6.75502253 37.44936336 A.trichopoda X4dtv_corrected","title":"output file list"},{"location":"guide/","text":"Start from the genome.fa and genome.gff3 if you have genome.fa and genome.gff3,you can get the require inputfile for KK4D as follow: genome file:GCF_000816755.2_Araip1.1_genomic.fa genome gff3 file:GCF_000816755.2_Araip1.1_genomic.gff bash genome2cdspep.sh GCF_000816755.2_Araip1.1_genomic.fa GCF_000816755.2_Araip1.1_genomic.gff A.ipaensis . The files A.ipaensis.cds and A.ipaensis.pep are the input files for KK4D. Warning Please make sure that the input sequence IDs of cds.fa and protein.fa are the same. Such as: head Ath.protein.fa >AT3G05780.1 pep chromosome:TAIR10:3:1714941:1719608:-1 gene:AT3G05780 transcript:AT3G05780.1 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:LON3 description:Lon protease homolog 3, mitochondrial [Source:UniProtKB/Swiss-Prot;Acc:Q9M9L8] MMPKRFNTSGFDTTLRLPSYYGFLHLTQSLTLNSRVFYGARHVTPPAIRIGSNPVQSLLL FRAPTQLTGWNRSSRDLLGRRVSFSDRSDGVDLLSSSPILSTNPNLDDSLTVIALPLPHK PLIPGFYMPIHVKDPKVLAALQESTRQQSPYVGAFLLKDCASTDSSSRSETEDNVVEKFK VKGKPKKKRRKELLNRIHQVGTLAQISSIQGEQVILVGRRRLIIEEMVSEDPLTVRVDHL head Ath.cds.fa >AT3G05780.1 cds chromosome:TAIR10:3:1714941:1719608:-1 gene:AT3G05780 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:LON3 description:Lon protease homolog 3, mitochondrial [Source:UniProtKB/Swiss-Prot;Acc:Q9M9L8] ATGATGCCTAAACGGTTTAACACGAGTGGCTTTGACACGACTCTTCGTCTACCTTCGTAC TACGGTTTCTTGCATCTTACACAAAGCTTAACCCTAAATTCCCGCGTTTTCTACGGTGCC CGCCATGTGACTCCTCCGGCTATTCGGATCGGATCCAATCCGGTTCAGAGTCTACTACTC head Ath.gff3 1 TAIR10 chromosome 1 30427671 . . . ID=chromosome:1;Alias=CP002684.1,Chr1,NC_003070.9 1 araport11 gene 3631 5899 . + . ID=gene:AT1G01010;Name=NAC001;biotype=protein_coding;description=NAC domain-containing protein 1 [Source:UniProtKB/Swiss-Prot%3BAcc:Q0WV96];gene_id=AT1G01010;logic_name=araport11 1 araport11 mRNA 3631 5899 . + . ID=transcript:AT1G01010.1;Parent=gene:AT1G01010;biotype=protein_coding;transcript_id=AT1G01010.1 1 araport11 five_prime_UTR 3631 3759 . + . Parent=transcript:AT1G01010.1 1 araport11 exon 3631 3913 . + . Parent=transcript:AT1G01010.1;Name=AT1G01010.1.exon1;constitutive=1;ensembl_end_phase=1;ensembl_phase=-1;exon_id=AT1G01010.1.exon1;rank=1 1 araport11 CDS 3760 3913 . + 0 ID=CDS:AT1G01010.1;Parent=transcript:AT1G01010.1;protein_id=AT1G01010.1 1 araport11 exon 3996 4276 . + . Parent=transcript:AT1G01010.1;Name=AT1G01010.1.exon2;constitutive=1;ensembl_end_phase=0;ensembl_phase=1;exon_id=AT1G01010.1.exon2;rank=2 1 araport11 CDS 3996 4276 . + 2 ID=CDS:AT1G01010.1;Parent=transcript:AT1G01010.1;protein_id=AT1G01010.1 In this example,the cds and protein IDs is \"AT3G05780.1\",so we must be set the \"key\" and \"type\" in config.ini. \"key\" should be set is \"transcript_id\" and \"type\" should be set is \"mRNA\". If this example,if the \"key\" is set to \"ID\", then the output IDs of Ath.bed will be \"transcript:AT1G01010.1\" is different with the protein.fa and cds.fa IDs \"AT1G01010.1\".So this will course Error. Before each script is run, it will check whether the output file of the previous step exists. So if the output bed format is incorrect, you can manually adjust it and still rename it to the name of the program output. Then run subsequent commands. If the latter step fails, be sure to delete the failed file. If your input sequence contains scaffold, and the ID prefix of the chromosome is the same as that of scaffold, the number of chromosomes may not be correctly resolved when drawing collinearity. Require input file Prepare Input file(can be normal or *.gz) genome.gff3 genome.pep.fa genome.cds.fa if you don\u2019t have protein or cds file,you can use gffread extract protein and cds sequence from genome and gff3 file. I wrote the python3 script \"getLongerSequences.py\" to get the longest transcript sequence for each gene protein or cds sequence.","title":"User Guide"},{"location":"guide/#start-from-the-genomefa-and-genomegff3","text":"if you have genome.fa and genome.gff3,you can get the require inputfile for KK4D as follow: genome file:GCF_000816755.2_Araip1.1_genomic.fa genome gff3 file:GCF_000816755.2_Araip1.1_genomic.gff bash genome2cdspep.sh GCF_000816755.2_Araip1.1_genomic.fa GCF_000816755.2_Araip1.1_genomic.gff A.ipaensis . The files A.ipaensis.cds and A.ipaensis.pep are the input files for KK4D.","title":"Start from the genome.fa and genome.gff3"},{"location":"guide/#warning","text":"Please make sure that the input sequence IDs of cds.fa and protein.fa are the same. Such as: head Ath.protein.fa >AT3G05780.1 pep chromosome:TAIR10:3:1714941:1719608:-1 gene:AT3G05780 transcript:AT3G05780.1 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:LON3 description:Lon protease homolog 3, mitochondrial [Source:UniProtKB/Swiss-Prot;Acc:Q9M9L8] MMPKRFNTSGFDTTLRLPSYYGFLHLTQSLTLNSRVFYGARHVTPPAIRIGSNPVQSLLL FRAPTQLTGWNRSSRDLLGRRVSFSDRSDGVDLLSSSPILSTNPNLDDSLTVIALPLPHK PLIPGFYMPIHVKDPKVLAALQESTRQQSPYVGAFLLKDCASTDSSSRSETEDNVVEKFK VKGKPKKKRRKELLNRIHQVGTLAQISSIQGEQVILVGRRRLIIEEMVSEDPLTVRVDHL head Ath.cds.fa >AT3G05780.1 cds chromosome:TAIR10:3:1714941:1719608:-1 gene:AT3G05780 gene_biotype:protein_coding transcript_biotype:protein_coding gene_symbol:LON3 description:Lon protease homolog 3, mitochondrial [Source:UniProtKB/Swiss-Prot;Acc:Q9M9L8] ATGATGCCTAAACGGTTTAACACGAGTGGCTTTGACACGACTCTTCGTCTACCTTCGTAC TACGGTTTCTTGCATCTTACACAAAGCTTAACCCTAAATTCCCGCGTTTTCTACGGTGCC CGCCATGTGACTCCTCCGGCTATTCGGATCGGATCCAATCCGGTTCAGAGTCTACTACTC head Ath.gff3 1 TAIR10 chromosome 1 30427671 . . . ID=chromosome:1;Alias=CP002684.1,Chr1,NC_003070.9 1 araport11 gene 3631 5899 . + . ID=gene:AT1G01010;Name=NAC001;biotype=protein_coding;description=NAC domain-containing protein 1 [Source:UniProtKB/Swiss-Prot%3BAcc:Q0WV96];gene_id=AT1G01010;logic_name=araport11 1 araport11 mRNA 3631 5899 . + . ID=transcript:AT1G01010.1;Parent=gene:AT1G01010;biotype=protein_coding;transcript_id=AT1G01010.1 1 araport11 five_prime_UTR 3631 3759 . + . Parent=transcript:AT1G01010.1 1 araport11 exon 3631 3913 . + . Parent=transcript:AT1G01010.1;Name=AT1G01010.1.exon1;constitutive=1;ensembl_end_phase=1;ensembl_phase=-1;exon_id=AT1G01010.1.exon1;rank=1 1 araport11 CDS 3760 3913 . + 0 ID=CDS:AT1G01010.1;Parent=transcript:AT1G01010.1;protein_id=AT1G01010.1 1 araport11 exon 3996 4276 . + . Parent=transcript:AT1G01010.1;Name=AT1G01010.1.exon2;constitutive=1;ensembl_end_phase=0;ensembl_phase=1;exon_id=AT1G01010.1.exon2;rank=2 1 araport11 CDS 3996 4276 . + 2 ID=CDS:AT1G01010.1;Parent=transcript:AT1G01010.1;protein_id=AT1G01010.1 In this example,the cds and protein IDs is \"AT3G05780.1\",so we must be set the \"key\" and \"type\" in config.ini. \"key\" should be set is \"transcript_id\" and \"type\" should be set is \"mRNA\". If this example,if the \"key\" is set to \"ID\", then the output IDs of Ath.bed will be \"transcript:AT1G01010.1\" is different with the protein.fa and cds.fa IDs \"AT1G01010.1\".So this will course Error. Before each script is run, it will check whether the output file of the previous step exists. So if the output bed format is incorrect, you can manually adjust it and still rename it to the name of the program output. Then run subsequent commands. If the latter step fails, be sure to delete the failed file. If your input sequence contains scaffold, and the ID prefix of the chromosome is the same as that of scaffold, the number of chromosomes may not be correctly resolved when drawing collinearity.","title":"Warning"},{"location":"guide/#require-input-file","text":"Prepare Input file(can be normal or *.gz) genome.gff3 genome.pep.fa genome.cds.fa if you don\u2019t have protein or cds file,you can use gffread extract protein and cds sequence from genome and gff3 file. I wrote the python3 script \"getLongerSequences.py\" to get the longest transcript sequence for each gene protein or cds sequence.","title":"Require input file"},{"location":"install/","text":"1. download KK4D from github git clone https://github.com/chaimol/KK4D.git cd KK4D bash Install.sh pip install jcvi source ~/.bashrc 2.check the install KK4D.sh -h","title":"Install"},{"location":"install/#1-download-kk4d-from-github","text":"git clone https://github.com/chaimol/KK4D.git cd KK4D bash Install.sh pip install jcvi source ~/.bashrc","title":"1. download KK4D from github"},{"location":"install/#2check-the-install","text":"KK4D.sh -h","title":"2.check the install"},{"location":"require/","text":"require software list provid binary software list seqkit maff KaKs_Calculator 2.0 ParaAT2.0 Must be install software by yourself jcvi Rscript Python3 If your input is genome.fa and genome.gff3, you need to run genome2cdspep.sh first. This script relies on gffread Check whether dependent software has been successfully installed or configured bash check_ENV.sh If the last line of output is All require software pass the check! , it means that all dependent software has been installed. If there is an error message in the output, please install the corresponding dependent software.","title":"Require software"},{"location":"require/#require-software-list","text":"","title":"require software list"},{"location":"require/#provid-binary-software-list","text":"seqkit maff KaKs_Calculator 2.0 ParaAT2.0","title":"provid binary software list"},{"location":"require/#must-be-install-software-by-yourself","text":"jcvi Rscript Python3 If your input is genome.fa and genome.gff3, you need to run genome2cdspep.sh first. This script relies on gffread","title":"Must be install software by yourself"},{"location":"require/#check-whether-dependent-software-has-been-successfully-installed-or-configured","text":"bash check_ENV.sh If the last line of output is All require software pass the check! , it means that all dependent software has been installed. If there is an error message in the output, please install the corresponding dependent software.","title":"Check whether dependent software has been successfully installed or configured"},{"location":"usage/","text":"Option1: Start with genome.fa and genome.gff3 file bash genome2cdspep.sh genome.fa genome.gff3 genome_abbr key_str key_str is the dividing character that distinguishes different transcripts, usually . or - Output file for KK4D: genome_abbr.pep genome_abbr.cds for example: Ath.gff3 1 araport11 gene 3631 5899 . + . ID=gene:AT1G01010;Name=NAC001;biotype=protein_coding;description=NAC domain-containing protein 1 [Source:UniProtKB/Swiss-Prot%3BAcc:Q0WV96];gene_id=AT1G01010;logic_name=araport11 1 araport11 mRNA 3631 5899 . + . ID=AT1G01010.1;Parent=gene:AT1G01010;biotype=protein_coding;transcript_id=AT1G01010.1 1 araport11 five_prime_UTR 3631 3759 . + . Parent=AT1G01010.1 1 araport11 exon 3631 3913 . + . Parent=AT1G01010.1;Name=AT1G01010.1.exon1;constitutive=1;ensembl_end_phase=1;ensembl_phase=-1;exon_id=AT1G01010.1.exon1;rank=1 1 araport11 CDS 3760 3913 . + 0 ID=CDS:AT1G01010.1;Parent=AT1G01010.1;protein_id=AT1G01010.1 1 araport11 exon 3996 4276 . + . Parent=AT1G01010.1;Name=AT1G01010.1.exon2;constitutive=1;ensembl_end_phase=0;ensembl_phase=1;exon_id=AT1G01010.1.exon2;rank=2 1 araport11 CDS 3996 4276 . + 2 ID=CDS:AT1G01010.1;Parent=AT1G01010.1;protein_id=AT1G01010.1 Part of the content of Ath.gff3 is as follows. We can see protein_id=AT1G01010.1 . AT1G01010.1 here is to distinguish different transcripts of the same gene based on the last . . So the command to obtain the cds and pep files of Ath should be similar to the following: bash genome2cdspep.sh Ath.genome.fa Ath.gff3 Ath . This script will finally output Ath.pep and Ath.cds, which are the protein sequence and CDS sequence as input to KK4D. Option2: Start with genome.gff3, genome.pep, genome.cds file. Input: You can copy config.ini to your working path and modify it to your own configuration information. Use -c config.ini to specify the location of the configuration parameter file, Or directly input various parameters. get the config.ini file KK4D.sh init This will create a config.ini file in your current working path. for coline analysis KK4D.sh coline -c /path/to/config.ini from gff3 cds.fa protein.fa ,get 1 or 2 species all the above information. KK4D.sh all -c /path/to/config.ini for A.trichopoda and M.domestica genome chromosome1 gene and protein analysis (This is for the purpose of the testing process only, the general situation is that the whole genome needs to be analyzed.) KK4D.sh all -group 2 -cpu 32 -key ID ID -type mRNA mRNA -sample A.trichopoda M.domestica -abbr Ath Mdo -gff3 Ath.chr1.gff3 Mdo.chr1.gff3 -protein Ath.pep.fa.gz Mdo.genome.protein.fa -cds Ath.cds.fa.gz Mdo.cds.fa -chrnum 1 1 for M.domestica genome analysis KK4D.sh all -group 1 -cpu 24 -key ID -type mRNA -sample M.domestica -abbr Mdo -gff3 gene_models_20170612.gff3.gz -protein /share/home/Mdo.pep.fa -cds /share/home/Mdo.cds.fa -chrnum 17","title":"Usage"},{"location":"usage/#option1-start-with-genomefa-and-genomegff3-file","text":"bash genome2cdspep.sh genome.fa genome.gff3 genome_abbr key_str key_str is the dividing character that distinguishes different transcripts, usually . or - Output file for KK4D: genome_abbr.pep genome_abbr.cds for example: Ath.gff3 1 araport11 gene 3631 5899 . + . ID=gene:AT1G01010;Name=NAC001;biotype=protein_coding;description=NAC domain-containing protein 1 [Source:UniProtKB/Swiss-Prot%3BAcc:Q0WV96];gene_id=AT1G01010;logic_name=araport11 1 araport11 mRNA 3631 5899 . + . ID=AT1G01010.1;Parent=gene:AT1G01010;biotype=protein_coding;transcript_id=AT1G01010.1 1 araport11 five_prime_UTR 3631 3759 . + . Parent=AT1G01010.1 1 araport11 exon 3631 3913 . + . Parent=AT1G01010.1;Name=AT1G01010.1.exon1;constitutive=1;ensembl_end_phase=1;ensembl_phase=-1;exon_id=AT1G01010.1.exon1;rank=1 1 araport11 CDS 3760 3913 . + 0 ID=CDS:AT1G01010.1;Parent=AT1G01010.1;protein_id=AT1G01010.1 1 araport11 exon 3996 4276 . + . Parent=AT1G01010.1;Name=AT1G01010.1.exon2;constitutive=1;ensembl_end_phase=0;ensembl_phase=1;exon_id=AT1G01010.1.exon2;rank=2 1 araport11 CDS 3996 4276 . + 2 ID=CDS:AT1G01010.1;Parent=AT1G01010.1;protein_id=AT1G01010.1 Part of the content of Ath.gff3 is as follows. We can see protein_id=AT1G01010.1 . AT1G01010.1 here is to distinguish different transcripts of the same gene based on the last . . So the command to obtain the cds and pep files of Ath should be similar to the following: bash genome2cdspep.sh Ath.genome.fa Ath.gff3 Ath . This script will finally output Ath.pep and Ath.cds, which are the protein sequence and CDS sequence as input to KK4D.","title":"Option1: Start with genome.fa and genome.gff3 file"},{"location":"usage/#option2-start-with-genomegff3-genomepep-genomecds-file","text":"Input: You can copy config.ini to your working path and modify it to your own configuration information. Use -c config.ini to specify the location of the configuration parameter file, Or directly input various parameters.","title":"Option2: Start with genome.gff3, genome.pep, genome.cds file."},{"location":"usage/#get-the-configini-file","text":"KK4D.sh init This will create a config.ini file in your current working path.","title":"get the config.ini file"},{"location":"usage/#for-coline-analysis","text":"KK4D.sh coline -c /path/to/config.ini","title":"for coline analysis"},{"location":"usage/#from-gff3-cdsfa-proteinfa-get-1-or-2-species-all-the-above-information","text":"KK4D.sh all -c /path/to/config.ini","title":"from gff3 cds.fa protein.fa ,get 1 or 2 species all the above information."},{"location":"usage/#for-atrichopoda-and-mdomestica-genome-chromosome1-gene-and-protein-analysis","text":"(This is for the purpose of the testing process only, the general situation is that the whole genome needs to be analyzed.) KK4D.sh all -group 2 -cpu 32 -key ID ID -type mRNA mRNA -sample A.trichopoda M.domestica -abbr Ath Mdo -gff3 Ath.chr1.gff3 Mdo.chr1.gff3 -protein Ath.pep.fa.gz Mdo.genome.protein.fa -cds Ath.cds.fa.gz Mdo.cds.fa -chrnum 1 1","title":"for A.trichopoda and M.domestica genome chromosome1 gene and protein analysis"},{"location":"usage/#for-mdomestica-genome-analysis","text":"KK4D.sh all -group 1 -cpu 24 -key ID -type mRNA -sample M.domestica -abbr Mdo -gff3 gene_models_20170612.gff3.gz -protein /share/home/Mdo.pep.fa -cds /share/home/Mdo.cds.fa -chrnum 17","title":"for M.domestica genome analysis"}]}